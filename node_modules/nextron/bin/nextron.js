#!/usr/bin/env node
"use strict";var e=require("path"),n=require("execa"),o=require("chalk");function r(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var s=r(e),t=r(n),i=r(o);const c=new Set(["init","build","dev"]);let l=process.argv[2],a=[],p=[];if(new Set(["--version","-v"]).has(l)){const e=require(s.default.resolve(__dirname,"../package.json"));console.log(`nextron v${e.version}`),process.exit(0)}new Set(["--help","-h"]).has(l)&&(console.log(i.default`
    {bold.cyan nextron} - ⚡ Electron + NEXT.js ⚡

    {bold USAGE}

      {bold $} {cyan nextron init} --help
      {bold $} {cyan nextron init} {underline my-app}
      {bold $} {cyan nextron init} {underline my-app} [--example {underline example_folder_name}]
  `),process.exit(0));const d=process.argv.find((e=>e.includes("--inspect")));d&&p.push(d),c.has(l)?a=process.argv.slice(3):(l="dev",a=process.argv.slice(2));const u="dev"===l?"development":"production";process.env.NODE_ENV=process.env.NODE_ENV||u;const v=s.default.join(__dirname,`nextron-${l}`),x=(()=>{const e=t.default("node",[...p,v,...a],{stdio:"inherit"});return e.on("close",((e,n)=>{null!==e&&process.exit(e),n&&("SIGKILL"===n&&process.exit(137),process.exit(1)),process.exit(0)})),e.on("error",(e=>{console.error(e),process.exit(1)})),e})(),f=()=>{x&&x.kill()};process.on("SIGINT",f),process.on("SIGTERM",f),process.on("exit",f);
