#!/usr/bin/env node
"use strict";var e=require("fs-extra"),o=require("path"),n=require("arg"),a=require("chalk"),i=require("execa"),l=require("fs");function r(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}require("webpack-merge"),require("webpack");var t=r(e),s=r(o),u=r(n),c=r(a),d=r(i),p=r(l);const f=process.cwd();require(s.default.join(f,"package.json")).dependencies;const h=e=>{try{return p.default.accessSync(e,p.default.constants.F_OK),!0}catch(e){return!1}},g=process.cwd();h(s.default.join(g,"tsconfig.json"));function b(e){console.log(c.default`{cyan [nextron]} ${e}`)}const m=u.default({"--help":Boolean,"--version":Boolean,"--all":Boolean,"--win":Boolean,"--mac":Boolean,"--linux":Boolean,"--x64":Boolean,"--ia32":Boolean,"--armv7l":Boolean,"--arm64":Boolean,"--config":String,"--publish":String,"-h":"--help","-v":"--version","-w":"--win","-m":"--mac","-l":"--linux","-c":"--config","-p":"--publish"});m["--help"]&&(console.log(c.default`
    {bold.cyan nextron build} - Build and export the application for production deployment

    {bold USAGE}

      {bold $} {cyan nextron build} --help
      {bold $} {cyan nextron build} [options]

    {bold OPTIONS}

      --help,    -h  shows this help message
      --version, -v  displays the current version of nextron
      --all          builds for Windows, macOS and Linux
      --win,     -w  builds for Windows, accepts target list (see https://goo.gl/jYsTEJ)
      --mac,     -m  builds for macOS, accepts target list (see https://goo.gl/5uHuzj)
      --linux,   -l  builds for Linux, accepts target list (see https://goo.gl/4vwQad) 
      --x64          builds for x64
      --ia32         builds for ia32
      --armv7l       builds for armv7l
      --arm64        builds for arm64
      --publish  -p  Publish artifacts (see https://goo.gl/tSFycD)
                     [choices: "onTag", "onTagOrDraft", "always", "never", undefined]

  `),process.exit(0));const w=process.cwd(),x={cwd:w,stdio:"inherit"};function v(){let e=[];return m["--x64"]&&e.push("--x64"),m["--ia32"]&&e.push("--ia32"),m["--armv7l"]&&e.push("--armv7l"),m["--arm64"]&&e.push("--arm64"),e}!async function(){process.env.ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES="true";const e=s.default.join(w,"app"),o=s.default.join(w,"dist"),n=(()=>{const e=s.default.join(g,"nextron.config.js");return h(e)?require(e):{}})().rendererSrcDir||"renderer";try{b("Clearing previous builds"),t.default.removeSync(e),t.default.removeSync(o),b("Building renderer process"),await d.default("next",["build",s.default.join(w,n)],x),await d.default("next",["export","-o",e,s.default.join(w,n)],x),b("Building main process"),await d.default("node",[s.default.join(__dirname,"webpack.config.js")],x),b("Packaging - please wait a moment"),await d.default("electron-builder",function(){let e=[];m["--config"]&&(e.push("--config"),e.push(m["--config"]||"electron-builder.yml"));m["--publish"]&&(e.push("--publish"),e.push(m["--publish"]));m["--all"]?(e.push("-wml"),e.push(...v())):(m["--win"]&&e.push("--win"),m["--mac"]&&e.push("--mac"),m["--linux"]&&e.push("--linux"),e.push(...v()));return e}(),x),b("See `dist` directory")}catch(e){console.log(c.default`

{bold.red Cannot build electron packages:}
{bold.yellow ${e}}
`),process.exit(1)}}();
